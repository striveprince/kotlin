apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
kapt {
    arguments {
        arg("moduleName", project.getName())
    }
//    generateStubs = true
}

kotlin.experimental.coroutines = 'enable'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    dataBinding.enabled = true
    viewBinding.enabled = true
//    buildFeatures{
//        dataBinding = true
//        viewBinding = true
//        compose = true
//    }
    kotlinOptions.jvmTarget = "1.8"

    defaultConfig {
        applicationId "com.lifecycle.demo"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental": "true",
                        AROUTER_MODULE_NAME: project.getName()
//                        "room.expandProjection": "true"
                ]
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk true
        }
    }
    buildTypes {
        def domain = "https://api.host.cn"
        def host = "host"
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "host", "\"${host}\""
            buildConfigField "String", "domainUrl", "\"http://localhost:8888\""
            buildConfigField "String", "endpoint", "\"http://oss-cn-hangzhou.aliyuncs.com\""
            manifestPlaceholders = [DOMAIN:"${domain}", HOST:"${host}"]
        }

        release {
            applicationIdSuffix ".release"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "host", "\"${host}\""
            buildConfigField "String", "domain", "\"${domain}\""
            buildConfigField "String", "endpoint", "\"http://oss-cn-hangzhou.aliyuncs.com\""
            manifestPlaceholders = [DOMAIN:"${domain}", HOST:"${host}"]
        }
    }
    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
        }
    }
}

/*

def data_version = "4.7.1"
configurations.all() {
    resolutionStrategy.force "org.antlr:antlr4-runtime:${data_version}"
    resolutionStrategy.force "org.antlr:antlr4-tool:${data_version}"
}
configurations.all {
    resolutionStrategy {
        force("org.antlr:antlr4-runtime:${data_version}")
        force("org.antlr:antlr4-tool:${data_version}")
    }
}*/

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])

//    def binding_version = "2.2.0-beta02"
//    implementation "com.lifecycle:binding:$binding_version"
//    implementation "com.lifecycle:rx:$binding_version"
//    implementation "com.lifecycle:coroutines:$binding_version"
    implementation project(path: ':binding')
//    implementation project(path: ':rx')
    implementation project(path: ':coroutines')
//    def binding_version = 2.2.0-beta02
//    implementation 'com.lifecycle:binding:$binding_version'
//    implementation 'com.lifecycle:rx:$binding_version'
//    implementation 'com.lifecycle:coroutines:$binding_version'


    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    def  room_version =  "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    kapt "com.android.databinding:compiler:$gradle_version"
    def androidx_version = '1.1.0'
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation 'com.koushikdutta.async:androidasync:2.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    def fragment_version = "1.2.5"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
//    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.vectordrawable:vectordrawable:$androidx_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.core:core-ktx:$androidx_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"


    def kotlin_coroutines_version = '1.3.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlin_coroutines_version"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    def dagger_version = '2.27'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.15'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    def retrofit = '2.6.2'
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.4.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.0'
    implementation 'com.squareup.okhttp3:okhttp:4.3.0'

    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.0-alpha-1'
    implementation 'com.scwang.smart:refresh-header-classics:2.0.0-alpha-1'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.alibaba:arouter-api:1.4.0'
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    def glide_version = '4.11.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.aliyun.dpa:oss-android-sdk:2.9.2'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.amap.api:location:4.7.2'
    implementation 'com.amap.api:map2d:6.0.0'
    implementation 'com.amap.api:search:7.1.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.afollestad.material-dialogs:core:3.1.1'

    def anko_version = '0.10.8'
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
}
